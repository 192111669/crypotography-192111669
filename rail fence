#include <stdio.h>
#include <string.h>

void encrypt(char *plaintext, int rails, char *ciphertext) {
    int len = strlen(plaintext);
    int rail_length = 2 * (rails - 1);
    int index = 0;
    int i, j;

    for (i = 0; i < rails; i++) {
        for (j = i; j < len; j += rail_length) {
            ciphertext[index++] = plaintext[j];
            if (i != 0 && i != rails - 1 && j + rail_length - 2 * i < len) {
                ciphertext[index++] = plaintext[j + rail_length - 2 * i];
            }
        }
    }
    ciphertext[index] = '\0';
}

void decrypt(char *ciphertext, int rails, char *decrypted) {
    int len = strlen(ciphertext);
    int rail_length = 2 * (rails - 1);
    int index = 0;
    int i, j, step;

    for (i = 0; i < rails; i++) {
        step = 2 * (rails - i - 1);
        for (j = i; j < len; j += step) {
            decrypted[j] = ciphertext[index++];
            if (i != 0 && i != rails - 1 && j + step < len) {
                decrypted[j + step] = ciphertext[index++];
            }
        }
    }
    decrypted[len] = '\0';
}

int main() {
    char plaintext[100];
    char ciphertext[100];
    char decrypted[100];
    int rails;

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    printf("Enter number of rails: ");
    scanf("%d", &rails);

    encrypt(plaintext, rails, ciphertext);
    printf("Encrypted text: %s\n", ciphertext);

    decrypt(ciphertext, rails, decrypted);
    printf("Decrypted text: %s\n", decrypted);

    return 0;
}
